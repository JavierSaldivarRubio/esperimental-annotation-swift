name: Deploy DocC to Github Pages
on:
  # Manual run
  workflow_dispatch:
  # Runs on pushes targeting the master branch
  #push:
   # branches: ["master"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  # One deployment deploy job since we're just deploying
  deploy:
    environment:
      # Must set to this for deploying to GitHub Pages
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Force Xcode 13.3.1 
        run: sudo xcode-select -s "/Applications/Xcode_13.3.1.app"
      
      - name: Build DocC
        run: | 
            SCHEME_NAME="AnnotationSwift"
            DESTINATION="generic/platform=iOS"
            BUILD_DIR="./build"
            OUTPUT_DIR="./docs"
            PROJECT_NAME="AnnotationSwift"
            # Borrar directorio de build y output si existen
            rm -rf $BUILD_DIR
            rm -rf $OUTPUT_DIR

            # Crear el directorio de build si no existe
            mkdir -p $BUILD_DIR

            # Generar la documentación
            xcodebuild docbuild \
                -scheme $SCHEME_NAME \
                -destination $DESTINATION \
                -derivedDataPath $BUILD_DIR \
                -allowProvisioningUpdates

            # Mensaje de éxito
            echo "Documentación generada en $BUILD_DIR"

            # Buscar el archivo .doccarchive generado
            DOCS_ARCHIVE=$(find $BUILD_DIR -name "*.doccarchive" | head -n 1)

            echo "Archivo doccarchive creado en $DOCS_ARCHIVE"

            if [ -z "$DOCS_ARCHIVE" ]; then
              echo "No se encontró ningún archivo .doccarchive."
              exit 1
            fi

            # Procesar el archivo .doccarchive
            $(xcrun --find docc) process-archive transform-for-static-hosting $DOCS_ARCHIVE --output-path $OUTPUT_DIR --hosting-base-path './'


            echo "Documentación transformada y lista para hospedaje estático en $OUTPUT_DIR"


      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload only the git-page directory
          path: 'docs/documentation/AnnotationSwift/'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
