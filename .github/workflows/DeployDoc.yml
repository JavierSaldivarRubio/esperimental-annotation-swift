name: Deploy DocC to GitHub Pages
on:
  # Manual run
  workflow_dispatch:
  # Runs on pushes targeting the master branch
  push:
    branches: ["master"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      # Must set to this for deploying to GitHub Pages
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Force Xcode 13.3.1
        run: sudo xcode-select -s "/Applications/Xcode_13.3.1.app"
      
      - name: Build DocC
        run: |
          # Configurable variables
          SCHEME_NAME="AnnotationSwift"
          DESTINATION="generic/platform=iOS"
          OUTPUT_DIR="./derivedData"
          DOC_DIR="./docs"
          PROJECT_NAME="annotationSwift"
          
          # Create output directory if it doesn't exist
          mkdir -p $OUTPUT_DIR
          
          # Generate documentation
          xcodebuild docbuild \
            -scheme $SCHEME_NAME \
            -destination $DESTINATION \
            -derivedDataPath $OUTPUT_DIR \
            -allowProvisioningUpdates
          
          # Success message
          echo "Documentation generated in $OUTPUT_DIR"
          
          # Find the generated .doccarchive file
          DOCS_ARCHIVE=$(find $OUTPUT_DIR -name "*.doccarchive" | head -n 1)
          echo "doccarchive file created in $DOCS_ARCHIVE"
          if [ -z "$DOCS_ARCHIVE" ]; then
            echo "No .doccarchive file found."
            exit 1
          fi
          
          # Process the .doccarchive file
          $(xcrun --find docc) process-archive transform-for-static-hosting $DOCS_ARCHIVE \
            --output-path $DOC_DIR \
            --hosting-base-path "experimental-annotation-swift"
          
          # Create an index.html file in the root to redirect to the correct path
          cat <<EOF > $DOC_DIR/index.html
          <!doctype html>
          <html lang="en-US">
          <head>
            <meta charset="utf-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
            <title>Documentation</title>
            <script>window.location.href += 'documentation/$PROJECT_NAME'</script>
          </head>
          <body>
          </body>
          </html>
          EOF
          
          echo "Documentation transformed and ready for static hosting in $DOC_DIR"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload only the docs directory
          path: 'docs'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
